---
anchors:
  smarsh_releases_bucket: &smarsh_releases_bucket
    bucket: smarsh-bosh-releases
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
  blobstore_credentials: &blobstore_credentials
    AWS_ACCESS_KEY_ID: ((aws-access-key-id))
    AWS_SECRET_ACCESS_KEY: ((aws-secret-access-key))
  bosh-creds: &bosh-creds
    jumpbox_key: ((jumpbox-key))
    ca_cert: ((ca-cert))
    BOSH_ENVIRONMENT: ((bosh-environment))

resources:
  - name: boshcli2
    type: registry-image
    source:
      repository: afamuzoka/boshcli2
      username: ((docker.username))
      password: ((docker.password))
      tag: latest

  - name: version
    type: semver
    source:
      driver: s3
      << : *smarsh_releases_bucket
      region: eu-west-2
      key: sredataservices/((bosh-release-name))/version
      initial_version: ((initial_version))

  - name: git-repo
    type: git
    icon: github-circle
    source:
      uri: ((git.url))
      branch: ((git.branch))
      private_key: ((git-private-key.private_key))
      
  - name: git-golang
    type: git
    icon: github-circle
    source:
      uri: https://github.com/bosh-packages/golang-release.git
      fetch_tags: true
      branch: v0.9.0 
  
  - name: s3-final-release
    type: s3
    source:
      << : *smarsh_releases_bucket
      regexp: sredataservices/release/((bosh-release-name))-(.*).tgz


jobs:

  - name: cut-release
    public: true
    serial: true
    plan:
      - in_parallel:
        - get: git-repo
          trigger: true
          version: latest
        - get: git-golang
          trigger: false
        - get: boshcli2
      - get: version
        trigger: false
        params:
          bump: patch
      - task: add-blobs
        file: git-repo/ci/tasks/add-blobs.yml
        image: boshcli2
        params: 
          << : *blobstore_credentials
          << : *bosh-creds
          BLOBSTORE: smarsh-bosh-release-blobs
        input_mapping: {golang-release: git-golang}
      - task: create-final-release
        file: git-repo/ci/tasks/create-final-release.yml
        image: boshcli2
        params: 
          << : *blobstore_credentials
          << : *bosh-creds
          BLOBSTORE: smarsh-bosh-release-blobs
      - put: s3-final-release
        params:
          file: release-tarball/((bosh-release-name))-*.tgz
#      - put: version
#        params: {file: version/number}
#          - put: golang-release
#      params:
#        rebase: true
#        repository: finalized-release
#        tag: version-tag/tag-name
#        annotate: version-tag/annotate-msg 
      
